version: 2

jobs:

  tests:
    docker:
      - image: circleci/node:10.8.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{checksum "package.json"}}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{checksum "package.json"}}
      - run:
          name: Run tests
          command: npm t

  package:
    docker:
      - image: circleci/node:10.8.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - dependencies-{{checksum "package.json"}}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{checksum "package.json"}}
      - run:
          name: Create packages
          command: npm run package
      - run:
          name: Save current version number
          command: npm show dat-cp version >current-version
      - run:
          name: Save new version number
          command: grep '"version":' package.json |cut -d'"' -f4 >new-version
      - persist_to_workspace:
          root: ~/repo
          paths: .

  publish-npm-package:
    docker:
      - image: circleci/node:10.8.0
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Publish npm package
          command: |
            CURRENT_VERSION=$(cat current-version)
            NEW_VERSION=$(cat new-version)
            echo "curr=$CURRENT_VERSION, new=$NEW_VERSION"
            if [ "$CURRENT_VERSION" = "$NEW_VERSION" ]
            then echo "Not a new release, exiting"
            else
              echo "$NPM_RC" >~/.npmrc
              npm publish
            fi

  publish-github-release:
    docker:
      - image: circleci/golang:1.14.3
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Publish release on github
          command: |
            CURRENT_VERSION=$(cat current-version)
            NEW_VERSION=$(cat new-version)
            echo "curr=$CURRENT_VERSION, new=$NEW_VERSION"
            if [ "$CURRENT_VERSION" = "$NEW_VERSION" ]
            then echo "Not a new release, exiting"
            else
              go get github.com/tcnksm/ghr
              echo "$GITHUB_TOKEN~$CIRCLE_PROJECT_USERNAME~$CIRCLE_PROJECT_REPONAME~$CIRCLE_SHA1~$NEW_VERSION"
              ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME -c $CIRCLE_SHA1 -delete $NEW_VERSION ./dist/
            fi

workflows:
  version: 2
  cicd-workflow:
    jobs:
      - tests
      - package:
          requires:
            - tests
          filters:
            branches:
              only: master
      - publish-github-release:
          requires:
            - package
      - publish-npm-package:
          requires:
            - package
